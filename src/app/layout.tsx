import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer"
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


/*
here the everything is in readOnly datatype and the children are of type React.ReactNode 
Readonly: The Readonly utility type makes the properties of the passed object immutable, meaning you cannot modify them after they have been set.
children: React.ReactNode: This type indicates that the children prop can be any valid React element (such as JSX), a string, a number, or an array of these types
*/
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="dark">

      <body className={inter.className}>
        <div className="relative w-full flex items-center justify-center">
          <Navbar />
        </div>
        {children}
        <div>
          <Footer />
        </div>
      </body>
    </html>
  );
}
